/*
if (!("a" in window)) { // в if видно, что window.a есть
    var a = 1; //тк по условию window.a быть не должно, эта строка не работает
}
alert(a); // Выведет Undefined
*/


/*
var b = function a(x) {
    x && a(--x);
};
alert(a); //Нет переменной 'a'. Выдаст ошибку. В функции тоже ни
          //одна переменная не объявлена.
*/
/*
function a(x) {
    return x * 2;
}
var a;
alert(a); //Выведет код функции, так как переменная а ничем не занята, но есть
         // функция с именем 'a'
*/
/*
function b(x, y, a) {
    arguments[2] = 10; // Внутри функции к 3-му по счёту аргументу присваивается
                      // значение 10. Третий аргумент - это 'a'
    alert(a);
}
b(1, 2, 3);
*/

/*
function a() {

    alert(this);
}
a.call(null);
*/

//В современном стандарте call/apply передают this «как есть».
//А в старом, без use strict, при указании первого аргумента null
//или undefined в call/apply, функция получает this = window